generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Administrador {
  Id              String  @id
  PrimerNombre             String               @db.VarChar(75)
  SegundoNombre            String?              @db.VarChar(75)
  ApellidoMaterno String  @db.VarChar(75)
  ApellidoPaterno String? @db.VarChar(75)
  Correo          String  @unique(map: "Administrador_Correo_key") @db.VarChar(255)
  PasswordAdmin   String  @db.VarChar(255)
  Activo          Boolean @default(true)
}

model Alumno {
  Id                 String               @id
  PrimerNombre             String               @db.VarChar(75)
  SegundoNombre            String?              @db.VarChar(75)
  ApellidoMaterno    String               @db.VarChar(75)
  ApellidoPaterno    String?              @db.VarChar(75)
  Grado              Int                  @default(1)
  Grupo              String               @default("A") @db.VarChar(20)
  Genero             Int
  CreatedAt          DateTime             @default(now())
  TutorId            String?
  Activo             Boolean              @default(true)
  Tutor              Tutor?               @relation(fields: [TutorId], references: [Id], map: "Alumno_TutorId_fkey")
  Serviciosdelalumno ServiciosDelAlumno[]
  
  HorarioServicioAlumno HorarioServicioAlumno[]
  @@index([TutorId], map: "Alumno_TutorId_fkey")
}

model ImgPaths {
  Id         String      @id 
  ServicioId String
  Path       String
  Servicio   Servicio @relation(fields: [ServicioId], references: [Id], map: "ImgPaths_ServicioId_fkey")

  @@index([ServicioId], map: "ImgPaths_ServicioId_fkey")
}

model Metodopago {
  Id      String @id
  Nombre  String
  TutorId String
  Tutor   Tutor  @relation(fields: [TutorId], references: [Id], map: "MetodoPago_TutorId_fkey")

  @@index([TutorId], map: "MetodoPago_TutorId_fkey")
}

model Pago {
  Folio      Int      @id @default(autoincrement())
  ServicioId String
  TutorId    String
  AlumnoId   String
  FechaPago  DateTime @default(now())
  Facturar   Boolean  @default(false)
  Monto      Float
  Servicio   Servicio @relation(fields: [ServicioId], references: [Id], map: "Pago_ServicioId_fkey")
  Tutor      Tutor    @relation(fields: [TutorId], references: [Id], map: "Pago_TutorId_fkey")
  @@index([ServicioId], map: "Pago_ServicioId_fkey")
  @@index([TutorId], map: "Pago_TutorId_fkey")
}

model Servicio {
  Id                 String                    @id
  Nombre             String                    @db.VarChar(75)
  Cancelable        Boolean                   @default(true)
  Descripcion        String                    @db.VarChar(500)
  FechaPago          Int
  Costo             Float                     @default(0)
  Activo             Boolean                   @default(true)
  FrecuenciaDePago   Servicio_FrecuenciaDePago @default(MENSUAL)
  ImgPaths           ImgPaths[]
  Pago               Pago[]
  ServiciosDelAlumno ServiciosDelAlumno[]
  HorarioServicio    HorarioServicio[]
}
model HorarioServicio {
  Id         String      @id
  ServicioId String
  Dia        DiaSemana
  Inicio Int
  Fin    Int
  Servicio   Servicio @relation(fields: [ServicioId], references: [Id])
}
model ServiciosDelAlumno {
  AlumnoId    String
  ServicioId  String
  FechaContrato DateTime @default(now())
  FechaExpiracion DateTime?
  Alumno      Alumno   @relation(fields: [AlumnoId], references: [Id])
  Servicio    Servicio @relation(fields: [ServicioId], references: [Id])
  @@id([AlumnoId,ServicioId])
}
model HorarioServicioAlumno {  
  Id String @id
  AlumnoId    String
  ServicioId String
  Dia DiaSemana        
  Inicio Int
  Fin    Int
  Alumno      Alumno   @relation(fields: [AlumnoId], references: [Id])

}

model Tutor {
  Id              String       @id
  PrimerNombre             String               @db.VarChar(75)
  SegundoNombre            String?              @db.VarChar(75)
  ApellidoMaterno String       @db.VarChar(75)
  ApellidoPaterno String?      @db.VarChar(75)
  Foto            String?      @db.VarChar(75)
  Correo          String       @unique(map: "Tutor_Correo_key") @db.VarChar(255)
  Telefono        String       @unique(map: "Tutor_Telefono_key") @db.VarChar(20)
  RFC             String?      @unique(map: "Tutor_RFC_key") @db.VarChar(15)
  PasswordTutor   String       @db.VarChar(255)
  Direccion       String?      @db.VarChar(150)
  CreatedAt       DateTime     @default(now())
  Activo          Boolean      @default(true)
  Alumno          Alumno[]
  Metodopago      Metodopago[]
  Pago            Pago[]
}

enum Servicio_FrecuenciaDePago {
  SEMANAL
  MENSUAL
  BIMESTRAL
  SEMESTRAL
  ANUAL
}
enum DiaSemana{
  LUNES
  MARTES
  MIERCOLES
  JUEVES
  VIERNES
}
