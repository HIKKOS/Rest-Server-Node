
components :
 schemas:
   tutor:	
     type: object
     properties:
       Id:
        type: string
        description: id del tutor
       Nombres:
  	     type: string
  	     description: nombre del tutor
       ApellidoMaterno:
  	     type: string
  	     description: apellido materno del tutor
       ApellidoPaterno:
  	     type: string
  	     description: apellido paterno del tutor
       Correo:
  	     type: string
  	     description: correo del tutor
       Telefono:
  	     type: string
  	     description: telefono del tutor
       RFC:
  	     type: string
  	     description: RFC del tutor
       PasswordTutor:
  	     type: string
  	     description: contrase√±a del tutor
       Direccion:
  	     type: string
  	     description: direccion del tutor
       Activo:
  	     type: boolean
  	     description: estado del tutor
       MetodoPago:
  	     type: string
  	     description: metodo de pago del tutor
required: 
- Id	
- Nombres
- ApellidoMaterno
- ApellidoPaterno
- Correo
- Telefono
- PasswordTutor
example:
Id: abc12
Nombres: "Juan"
ApellidoMaterno: "Perez"
ApellidoPaterno: "Perez"
Correo: "juan@gmail.com"
Telefono: "1234567890"
components:
	responses:
		200:
			description: tutor creado
			content:
				application/json:
					schema:
						$ref: '#/components/schemas/tutor'
		400:
			description: tutor no creado
			content:
				application/json:
					schema:
						$ref: '#/components/schemas/tutor'
	requestBody:
		content:
			application/json:
				schema:
					$ref: '#/components/schemas/tutor'
	securitySchemes:
		bearerAuth:
			type: http
			scheme: bearer
			bearerFormat: JWT
	security:
		- bearerAuth: []
	tags:
		- name: tutor
			description: tutor
paths:
	/tutor:
		post:
			summary: crear tutor
			tags: [tutor]
			responses:
				200:
					description: tutor creado
					content:
						application/json:
							schema:
								$ref: '#/components/schemas/tutor'
				400:
					description: tutor no creado
					content:
						application/json:
							schema:
								$ref: '#/components/schemas/tutor'
			requestBody:
				content:
					application/json:
						schema:
							$ref: '#/components/schemas/tutor'
	/tutor/{id}:
		put:
			summary: actualizar tutor
			tags: [tutor]
			responses:
				200:
					description: tutor actualizado
					content:
						application/json:
							schema:
								$ref: '#/components/schemas/tutor'
				400:
					description: tutor no actualizado
					content:
						application/json:
							schema:
								$ref: '#/components/schemas/tutor'
			requestBody:
				content:
					application/json:
						schema:
							$ref: '#/components/schemas/tutor'
	/tutor/{id}:
		get:
			summary: obtener tutor
			tags: [tutor]
			responses:
				200:
					description: tutor obtenido
					content:
						application/json:
							schema:
								$ref: '#/components/schemas/tutor'
				400:
					description: tutor no obtenido
					content:
						application/json:
							schema:
								$ref: '#/components/schemas/tutor'
			requestBody:
				content:
					application/json:
						schema:
							$ref: '#/components/schemas/tutor'
	/tutor/{id}:
		delete:
			summary: eliminar tutor
			tags: [tutor]
			responses:
				200:
					description: tutor eliminado
					content:
						application/json:
							schema:
								$ref: '#/components/schemas/tutor'
				400:
					description: tutor no eliminado
					content:
						application/json:
							schema:
								$ref: '#/components/schemas/tutor'
			requestBody:
				content:
					application/json:
						schema:
							$ref: '#/components/schemas/tutor'